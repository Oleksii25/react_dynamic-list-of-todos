{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","filterParameters","selectParameters","filterTodosByTitle","value","setState","filterTodosByState","this","props","todos","onClick","userId","className","type","onChange","target","name","filter","todo","title","includes","completed","map","key","id","classNames","checked","readOnly","React","Component","defaultProps","PropTypes","arrayOf","shape","getUserInfo","fetch","then","result","json","response","data","CurrentUser","user","getUser","a","email","phone","App","selectedUserId","changeSelectedUser","clearSelectedUser","ReactDOM","render","document","getElementById"],"mappings":"sZAKaA,G,MAAb,4MACEC,MAAQ,CACNC,iBAAkB,GAClBC,iBAAkB,OAHtB,EAMEC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CACZJ,iBAAkBG,KARxB,EAYIE,mBAAqB,SAACF,GACpB,EAAKC,SAAS,CACZH,iBAAkBE,KAd1B,4CAmBE,WAAU,IAAD,OACP,EAIIG,KAAKC,MAHPC,EADF,EACEA,MACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,OAEF,EAGIJ,KAAKP,MAFPC,EADF,EACEA,iBACAC,EAFF,EAEEA,iBAGF,OACE,yBAAKU,UAAU,YACb,sCAEA,yBAAKA,UAAU,4BACb,2BACEC,KAAK,OACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB,EAAKZ,mBAAmBY,EAAOX,UAE3D,4BACEY,KAAK,SACLF,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB,EAAKT,mBAAmBS,EAAOX,SAEzD,4BACEA,MAAM,OADR,OAKA,4BACEA,MAAM,UADR,UAKA,4BACEA,MAAM,aADR,cAMF,wBAAIQ,UAAU,kBACXH,EACEQ,QACC,SAAAC,GAAI,OAAIA,EAAKC,OACRD,EAAKC,MAAMC,SAASnB,MAE1BgB,QACC,SAAAC,GACE,OAAOhB,GACL,IAAK,MACH,OAAO,EACT,IAAK,SACH,OAAQgB,EAAKG,UACf,IAAK,YACH,OAAOH,EAAKG,cAInBC,KAAI,SAAAJ,GAAI,OACP,wBACEK,IAAKL,EAAKM,GACVZ,UAAWa,IACT,iBAAiB,CACjB,0BAA2BP,EAAKG,UAChC,6BAA8BH,EAAKG,aAIrC,+BACE,2BACER,KAAK,WACLa,QAASR,EAAKG,UACdM,UAAQ,IACV,2BAAIT,EAAKC,QAEX,4BACEP,UAAWa,IACT,wBACA,SACA,CAAC,kCAAmCP,EAAKP,SAAWA,IAEtDE,KAAK,SACLH,QAAS,kBAAMA,EAAQQ,EAAKP,UAE3BO,EAAKP,OATR,gBA9FlB,GAA8BiB,IAAMC,YAkHpC9B,EAAS+B,aAAe,CAACrB,MAAOsB,IAAUC,QAAQD,IAAUE,MAAM,CAChEd,MAAO,GACPE,WAAW,EACXV,OAAQ,MCjHH,SAASuB,EAAYV,GAC1B,OAAOW,MAAM,GAAD,OATE,uCASF,YAAeX,IACxBY,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GAAQ,OAAIA,EAASC,Q,UCPlBC,EAAb,4MACEzC,MAAQ,CACN0C,KAAM,MAFV,EAeEC,QAfF,sBAeY,4BAAAC,EAAA,sEACWV,EAAY,EAAK1B,MAAMG,QADlC,OACF+B,EADE,OAER,EAAKrC,SAAS,CACZqC,SAHM,2CAfZ,8FAKE,sBAAAE,EAAA,sDACErC,KAAKoC,UADP,gDALF,6HASE,WAAyBnC,GAAzB,SAAAoC,EAAA,sDACKpC,EAAMG,SAAWJ,KAAKC,MAAMG,QAC7BJ,KAAKoC,UAFT,gDATF,2EAsBE,WACE,IAAQD,EAASnC,KAAKP,MAAd0C,KACR,OAAOA,GACL,yBAAK9B,UAAU,eACb,wBAAIA,UAAU,sBAAqB,gDAAsB8B,EAAKlB,KAE9D,wBAAIZ,UAAU,qBAAqB8B,EAAK1B,MACxC,uBAAGJ,UAAU,sBAAsB8B,EAAKG,OACxC,uBAAGjC,UAAU,sBAAsB8B,EAAKI,OACxC,4BACEjC,KAAK,SACLD,UAAU,eACVF,QAASH,KAAKC,MAAME,SAHtB,cA/BR,GAAiCkB,IAAMC,WA2CvCY,EAAYX,aAAe,CACzBnB,OAAQ,M,ICWKoC,E,4MApDb/C,MAAQ,CACNS,MAAO,GACPuC,eAAgB,G,EAUlBC,mBAAqB,SAACzB,GACpB,EAAKnB,SAAS,CACZ2C,eAAgBxB,K,EAIpB0B,kBAAoB,WAClB,EAAK7C,SAAS,CACZ2C,eAAgB,K,8FAfpB,4BAAAJ,EAAA,sEFTOT,MAJQ,wCAKZC,MAAK,SAAAG,GAAQ,OAAIA,EAASD,UAC1BF,MAAK,SAAAG,GAAQ,OAAIA,EAASC,QEO7B,OACQ/B,EADR,OAEEF,KAAKF,SAAS,CACZI,UAHJ,gD,0EAmBA,WACE,MAAkCF,KAAKP,MAA/BS,EAAR,EAAQA,MAAOuC,EAAf,EAAeA,eAEf,OACE,yBAAKpC,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEH,MAAOA,EACPC,QAASH,KAAK0C,mBACdtC,OAAQqC,KAIZ,yBAAKpC,UAAU,gBACb,yBAAKA,UAAU,0BACZoC,EACC,kBAAC,EAAD,CACErC,OAAQqC,EACRtC,QAASH,KAAK2C,oBAEd,0B,GA7CEtB,IAAMC,WCHxBsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.34179e38.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    filterParameters: '',\n    selectParameters: 'all',\n  }\n\n  filterTodosByTitle = (value) => {\n    this.setState({\n      filterParameters: value,\n    })\n  }\n\n    filterTodosByState = (value) => {\n      this.setState({\n        selectParameters: value,\n      })\n    }\n\n\n  render() {\n    const {\n      todos,\n      onClick,\n      userId,\n    } = this.props;\n    const {\n      filterParameters,\n      selectParameters,\n    } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n    \n        <div className=\"TodoList__list-container\">\n          <input\n            type=\"text\"\n            onChange={({ target }) => this.filterTodosByTitle(target.value)}\n          />\n          <select\n            name=\"select\"\n            onChange={({ target }) => this.filterTodosByState(target.value)}\n          >\n            <option\n              value='all'\n            >\n              All\n            </option>\n            <option\n              value='active'\n            >\n              Active\n            </option>\n            <option\n              value='completed'\n            >\n              Completed\n            </option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {todos\n              .filter(\n                todo => todo.title \n                  && todo.title.includes(filterParameters)\n              )\n              .filter(\n                todo => {\n                  switch(selectParameters) {\n                    case 'all':\n                      return true;\n                    case 'active':\n                      return !todo.completed;\n                    case 'completed':\n                      return todo.completed;\n                  }\n                }\n              )\n              .map(todo => (\n                <li\n                  key={todo.id}\n                  className={classNames(\n                    'TodoList__item',{\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                    })\n                  }\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={todo.completed}\n                      readOnly/>\n                    <p>{todo.title}</p>\n                  </label>\n                  <button\n                    className={classNames(\n                      'TodoList__user-button',\n                      'button',\n                      {'TodoList__user-button--selected': todo.userId === userId}\n                    )}\n                    type=\"button\"\n                    onClick={() => onClick(todo.userId)}\n                  >\n                    {todo.userId}#\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}; \nTodoList.defaultProps = {todos: PropTypes.arrayOf(PropTypes.shape({\n  title: '',\n  completed: false,\n  userId: 0,\n  })),\n  \n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n  })),\n  onClick: PropTypes.func.isRequired,\n  userId: PropTypes.number,\n}\n","const todosUrl = 'https://mate-api.herokuapp.com/todos';\nconst userUrl = 'https://mate-api.herokuapp.com/users';\n\nexport function getTodos() {\n  return fetch(todosUrl)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n\nexport function getUserInfo(id) {\n  return fetch(`${userUrl}/${id}`)\n    .then(result => result.json())\n    .then(response => response.data);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserInfo } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  async componentDidMount() {\n    this.getUser()\n  }\n\n  async componentDidUpdate(props) {\n    if(props.userId !== this.props.userId){\n      this.getUser()\n    }\n  }\n\n  getUser = async() => {\n    const user = await getUserInfo(this.props.userId);\n    this.setState({\n      user,\n    })\n  }\n\n  render() {\n    const { user } = this.state;\n    return user && (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\"><span>Selected user: {user.id}</span></h2>\n    \n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type='button'\n          className='clear-button'\n          onClick={this.props.onClick}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n};\n\nCurrentUser.defaultProps = {\n  userId: null,\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos()\n    this.setState({\n      todos,\n    })\n  }\n\n  changeSelectedUser = (id) => {\n    this.setState({\n      selectedUserId: id,\n    })\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    })\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onClick={this.changeSelectedUser}\n            userId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClick={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}